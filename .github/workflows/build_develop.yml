name: Java CI with Maven

on:
  push:
    branches: [develop]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: >
            [
              {
                "id": "central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "url": "https://maven.pkg.github.com/bitwarden/sdk",
                "releases": {
                    "enabled": "true"
                },
                "snapshots": {
                    "enabled": "true"
                }
              }
            ]
          servers: >
            [
              {
                "id": "github",
                "username": "${env.PACKAGES_USER}",
                "password": "${env.PACKAGES_ACCESS_TOKEN}",
                "configuration": {
                  "httpConfiguration": {
                    "all": {
                      "usePreemptive": "true"
                    }
                  }
                }
              }
            ]
          profiles: >
            [
              {
                "id": "github"
              }
            ]
          active_profiles: >
            [
              "github"
            ]
          output_file: .m2/settings.xml
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '20'
          cache: 'maven'
          overwrite-settings: 'false'
      - name: Set up GPG
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: Build with Maven
        run: mvn -s ${{ github.workspace }}/.m2/settings.xml -B -Psign -Dgpg.passphrase=${GPG_PASSPHRASE} -Dtest=org.purejava.integrations.keychain.BitwardenAccessTest install --file pom.xml
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          PACKAGES_USER: ${{ secrets.PACKAGES_USER }}
          PACKAGES_ACCESS_TOKEN: ${{ secrets.PACKAGES_ACCESS_TOKEN }}
